#include <SDL2/SDL_opengl.h>

extern void (APIENTRY * rtglAlphaFunc) (GLenum, GLclampf);
extern void (APIENTRY * rtglBegin) (GLenum);
extern void (APIENTRY * rtglBindTexture) (GLenum, GLuint);
extern void (APIENTRY * rtglBlendFunc) (GLenum, GLenum);
extern void (APIENTRY * rtglClear) (GLbitfield);
extern void (APIENTRY * rtglClearDepth) (GLclampd);
extern void (APIENTRY * rtglClearColor) (GLclampf, GLclampf, GLclampf, GLclampf);
extern void (APIENTRY * rtglColor3f) (GLfloat, GLfloat, GLfloat);
extern void (APIENTRY * rtglColor4f) (GLfloat, GLfloat, GLfloat, GLfloat);
extern void (APIENTRY * rtglCopyTexImage2D) (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
extern void (APIENTRY * rtglDepthFunc) (GLenum);
extern void (APIENTRY * rtglDepthMask) (GLboolean);
extern void (APIENTRY * rtglDeleteTextures) (GLsizei, const GLuint *);
extern void (APIENTRY * rtglDisable) (GLenum);
extern void (APIENTRY * rtglDrawArrays) (GLenum, GLint, GLsizei);
extern void (APIENTRY * rtglEnable) (GLenum);
extern void (APIENTRY * rtglEnd) (void);
extern void (APIENTRY * rtglFogf) (GLenum, GLfloat);
extern void (APIENTRY * rtglFogfv) (GLenum, const GLfloat *);
extern void (APIENTRY * rtglFogi) (GLenum, GLint);
extern GLenum (APIENTRY * rtglGetError) (void);
extern void (APIENTRY * rtglGenTextures) (GLsizei, GLuint *);
extern void (APIENTRY * rtglGetFloatv) (GLenum, GLfloat*);
extern void (APIENTRY * rtglGetIntegerv) (GLenum, GLint*);
extern void (APIENTRY * rtglGetTexLevelParameteriv) (GLenum, GLint, GLenum, GLint *);
extern void (APIENTRY * rtglHint) (GLenum, GLenum);
extern void (APIENTRY * rtglInterleavedArrays) (GLenum, GLsizei, const GLvoid *);
extern void (APIENTRY * rtglLightf) (GLenum, GLenum, GLfloat);
extern void (APIENTRY * rtglLightfv) (GLenum, GLenum, const GLfloat *);
extern void (APIENTRY * rtglLightModeli) (GLenum, GLint);
extern void (APIENTRY * rtglLightModelfv) (GLenum, const GLfloat *);
extern void (APIENTRY * rtglLoadIdentity) (void);
extern void (APIENTRY * rtglMaterialfv) (GLenum, GLenum, const GLfloat *);
extern void (APIENTRY * rtglMatrixMode) (GLenum);
extern void (APIENTRY * rtglNormal3f) (GLfloat, GLfloat, GLfloat);
extern const GLubyte* (APIENTRY * rtglGetString) (GLenum);
extern void (APIENTRY * rtglPixelStorei) (GLenum, GLint);
extern void (APIENTRY * rtglPushAttrib) (GLbitfield);
extern void (APIENTRY * rtglPopAttrib) (void);
extern void (APIENTRY * rtglPushMatrix) (void);
extern void (APIENTRY * rtglPopMatrix) (void);
extern void (APIENTRY * rtglRotatef) (GLfloat, GLfloat, GLfloat, GLfloat);
extern void (APIENTRY * rtglScalef) (GLfloat, GLfloat, GLfloat);
extern void (APIENTRY * rtglShadeModel) (GLenum);
extern void (APIENTRY * rtglTranslatef) (GLfloat, GLfloat, GLfloat);
extern void (APIENTRY * rtglTexCoord2f) (GLfloat, GLfloat);
extern void (APIENTRY * rtglTexEnvi) (GLenum, GLenum, GLint);
extern void (APIENTRY * rtglTexImage2D) (GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid *);
extern void (APIENTRY * rtglTexParameteri) (GLenum, GLenum, GLint);
extern void (APIENTRY * rtglTexParameterf) (GLenum, GLenum, GLfloat);
extern void (APIENTRY * rtglVertex3f) (GLfloat, GLfloat, GLfloat);
extern void (APIENTRY * rtglViewport) (GLint, GLint, GLsizei, GLsizei);

/* opengl 2.0 shader functions */
extern void (APIENTRY * rtglShaderSource) (GLuint, GLsizei, const GLchar**, const GLint*);
extern GLuint (APIENTRY * rtglCreateShader) (GLenum);
extern void (APIENTRY * rtglCompileShader) (GLuint);
extern void (APIENTRY * rtglAttachShader) (GLuint, GLuint);
extern void (APIENTRY * rtglGetShaderiv) (GLuint, GLenum, GLint *);
extern void (APIENTRY * rtglGetShaderInfoLog) (GLuint, GLsizei, GLsizei*, GLchar *);
extern void (APIENTRY * rtglDeleteShader) (GLuint);
extern void (APIENTRY * rtglLinkProgram) (GLuint);
extern GLuint (APIENTRY * rtglCreateProgram) (GLvoid);
extern void (APIENTRY * rtglUseProgram) (GLuint);
extern void (APIENTRY * rtglGetProgramiv) (GLuint, GLenum, GLint *);
extern void (APIENTRY * rtglValidateProgram) (GLuint);
extern GLint (APIENTRY * rtglGetUniformLocation) (GLuint, const GLchar *);
extern void (APIENTRY * rtglUniform1i) (GLint, GLint);

extern void (APIENTRY * rtglActiveTexture) (GLenum);
